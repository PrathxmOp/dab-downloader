name: Changelog and Discord Notification

on:
  push:
    branches:
      - main

jobs:
  update_and_notify:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Grant write permissions to push back to the repo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Need full history for changelog generation

      # Store the initial state of CHANGELOG.md
      - name: Store initial CHANGELOG.md
        id: initial_changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            cat CHANGELOG.md > initial_CHANGELOG.md
          else
            touch initial_CHANGELOG.md
          fi

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          output-file: "CHANGELOG.md"
          git-message: "chore: update changelog"
          git-user-name: "github-actions[bot]"
          git-user-email: "github-actions[bot]@users.noreply.github.com"
          version-file: "version/version.json"
          version-path: "version"
          skip-tag: 'true' # Skip tag creation if it already exists

      - name: Send Discord Notification
        # Only send notification if the changelog action actually made changes
        if: steps.changelog.outputs.changelog != ''
        run: |
          set -x # Enable debugging
          WEBHOOK_URL="${{ secrets.DISCORD_WEBHOOK_URL }}"
          # Escape the changelog content for JSON
          ESCAPED_CHANGELOG=$(echo "${{ steps.changelog.outputs.changelog }}" | jq -Rs .)
          MESSAGE=$(cat <<EOF
            {
              "content": "ðŸ“œ **Changelog Updated**\n${ESCAPED_CHANGELOG}"
            }
          EOF
          )
          curl -v -H "Content-Type: application/json" -X POST -d "$MESSAGE" "$WEBHOOK_URL"
